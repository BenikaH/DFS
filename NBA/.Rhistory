2+5
a <- 1
b <- 3
a + b
source('~/OneDrive/R/NBA/Scripts/actual.R')
getwd()
source('~/Dropbox/Greener Change/Information extraction/Bloomberg/financials.R')
source('~/Dropbox/Greener Change/Information extraction/Bloomberg/financials.R')
source('~/Dropbox/Greener Change/Information extraction/Bloomberg/financials.R')
source('~/Dropbox/Greener Change/Information extraction/Bloomberg/financials.R')
source('~/Dropbox/Greener Change/Information extraction/Bloomberg/financials.R')
a <- getURL("https://finance.yahoo.com/quote/ADP.PA/financials")
a
a <- content(GET("https://finance.yahoo.com/quote/ADP.PA/financials"))
a
a <- htmlParse(content(GET("https://finance.yahoo.com/quote/ADP.PA/financials")))
a
source('~/Dropbox/Greener Change/Information extraction/Bloomberg/financials.R')
source('~/Dropbox/Greener Change/Information extraction/Bloomberg/financials.R')
source('~/Dropbox/Greener Change/Information extraction/Bloomberg/financials.R')
pool <- readHTMLTable(remDr$getPageSource()[[1]], stringsAsFactors = F)[[2]]
View(pool)
a <- getURL("https://finance.yahoo.com/quote/ADP.PA/financials?p=ADP.PA")
b <- readHTMLTable(a)
source('~/Dropbox/Greener Change/Information extraction/Bloomberg/financials.R')
View(f)
# close remote driver
remDr$close()
rD$server$stop()
source('~/Dropbox/Greener Change/Information extraction/Bloomberg/financials.R')
source('~/Dropbox/Greener Change/Information extraction/Bloomberg/financials.R')
View(df)
debugSource('~/Dropbox/Greener Change/Information extraction/Bloomberg/financials.R')
file.path(find.package("RSelenium"), "examples/serverUtils")
debugSource('~/Dropbox/Greener Change/Information extraction/Bloomberg/financials.R')
debugSource('~/Dropbox/Greener Change/Information extraction/Bloomberg/financials.R')
startServer
startServer()
cprof
cprof[[1]]
tmpfile <- "~/Downloads/Adguard-AdBlocker_v2.5.11.crx"
cprof <- list(chromeOptions =
list(extensions =
list(jsonlite::base64_enc(readBin(tmpfile, "raw", file.info(tmpfile)$size)))
))
cprof
cprof$chromeOptions
a <- read.csv("~/Downloads/playerPool.csv")
b <- read.csv("/Users/matt/Downloads/playerPool.csv")
a == b
shiny::runApp('OneDrive/GitHub/GCAppTwo')
runApp('Dropbox/Net Impact/Charlie/Assignment1B')
runApp('OneDrive/GitHub/GCAppTwo')
runApp('Dropbox/Net Impact/Charlie/Assignment1B')
debugSource('~/OneDrive/R/NBA/Scripts/actual.R')
debugSource('~/OneDrive/R/NBA/Scripts/actual.R')
source('~/OneDrive/R/NBA/Scripts/actual.R')
source('~/OneDrive/R/NBA/Scripts/actual.R')
source('~/OneDrive/R/NBA/Scripts/actual.R')
source('~/OneDrive/R/NBA/Scripts/actual.R')
source('~/OneDrive/R/NBA/Scripts/actual.R')
source('~/OneDrive/R/NBA/Scripts/actual.R')
source('~/OneDrive/R/NBA/Scripts/actual.R')
source('~/OneDrive/R/NBA/Scripts/actual.R')
source('~/OneDrive/R/NBA/Scripts/actual.R')
source('~/OneDrive/R/NBA/Scripts/actual.R')
a <- readHTMLTable("https://www.bloomberg.com/markets/symbolsearch?query=alphabet&commit=Find+Symbols")
a <- readHTMLTable(getURL("https://www.bloomberg.com/markets/symbolsearch?query=alphabet&commit=Find+Symbols"))
library(RCurl)
a <- readHTMLTable(getURL("https://www.bloomberg.com/markets/symbolsearch?query=alphabet&commit=Find+Symbols"))
a <- readHTMLTable(getURL("https://www.bloomberg.com/markets/symbolsearch?query=alphabet&commit=Find+Symbols"))[[1]]
View(a)
a <- readHTMLTable(getURL("https://www.bloomberg.com/markets/symbolsearch?query=apple&commit=Find+Symbols"))[[1]]
debugSource('~/OneDrive/R/NBA/Scripts/actual.R')
getwd()
f <- list.files("~/Dropbox/Greener Change/Information extraction/SASB/Provisional Standards")
a <- read.csv("~/Dropbox/Greener Change/Database/companies.csv")
View(a)
load("/Users/matt/Dropbox/Greener Change/Database/SASB/metaList.RData")
metaList[[1]]
load("/Users/matt/Dropbox/Greener Change/Information extraction/SASB/metricsList.RData")
View(metricsList[[1]])
names(metricsList)
View(metricsList[[2]])
getwd()
a <- read.csv("~/Dropbox/Greener Change/Database/sics_industries_sectors.csv")
library(XML)
library(RCurl)
b <- readHTMLTable("https://www.sasb.org/sics/")
b <- readHTMLTable(getURL("https://www.sasb.org/sics/"))
a <- read.csv("~/Dropbox/Greener Change/Database/sics_industries_sectors.csv", stringsAsFactors = F)
b <- readHTMLTable(getURL("https://www.sasb.org/sics/"), stringsAsFactors = F)
library(plyr)
d <- ldply(b, data.frame)
View(d)
d <- na.omit(d)
d <- d[, 6:7]
names(d) <- c("Code", "Industry")
View(a)
a$Code <- ""
for (i in 1:nrow(a)) {
a$Code[i] <- d$Code[d$Industry == a$Industry[i]]
}
d[69]
d$Industry[69]
row.names(d) <- NULL
View(d)
d$Industry[61]
d$Industry[61] <- Apparel, Accessories & Footwear
d$Industry[61] <- "Apparel, Accessories & Footwear"
a$Code <- ""
for (i in 1:nrow(a)) {
a$Code[i] <- d$Code[d$Industry == a$Industry[i]]
}
for (i in 29:nrow(a)) {
a$Code[i] <- d$Code[d$Industry == a$Industry[i]]
}
for (i in 30:nrow(a)) {
a$Code[i] <- d$Code[d$Industry == a$Industry[i]]
}
for (i in 45:nrow(a)) {
a$Code[i] <- d$Code[d$Industry == a$Industry[i]]
}
for (i in 52:nrow(a)) {
a$Code[i] <- d$Code[d$Industry == a$Industry[i]]
}
for (i in 59:nrow(a)) {
a$Code[i] <- d$Code[d$Industry == a$Industry[i]]
}
for (i in 60:nrow(a)) {
a$Code[i] <- d$Code[d$Industry == a$Industry[i]]
}
for (i in 61:nrow(a)) {
a$Code[i] <- d$Code[d$Industry == a$Industry[i]]
}
for (i in 62:nrow(a)) {
a$Code[i] <- d$Code[d$Industry == a$Industry[i]]
}
for (i in 69:nrow(a)) {
a$Code[i] <- d$Code[d$Industry == a$Industry[i]]
}
write.csv(a, file = "~/Dropbox/Greener Change/Database/sics_industries_sectors.csv", row.names = F)
load("/Users/matt/Dropbox/Greener Change/Database/SASB/metricsList.RData")
View(metricsList[[1]])
load("/Users/matt/Dropbox/Greener Change/Database/SASB/perfList.RData")
View(perfList[[1]])
names(perfList)
load("/Users/matt/Dropbox/Greener Change/Database/SASB/sectorIndustry.RData")
sector
industry
shiny::runApp('OneDrive/GitHub/gcShiny')
install.packages("markdown")
runApp('OneDrive/GitHub/gcShiny')
runApp('OneDrive/GitHub/gcShiny')
source('~/OneDrive/R/NBA/Scripts/actual.R')
shiny::runApp('OneDrive/GitHub/gcShiny')
shiny::runApp('OneDrive/GitHub/gcShiny')
runApp('OneDrive/GitHub/gcShiny')
shiny::runApp('OneDrive/GitHub/gcShiny')
source('~/OneDrive/R/NBA/Scripts/actual.R')
shiny::runApp('OneDrive/GitHub/gcShiny')
shiny::runApp('OneDrive/GitHub/gcShiny')
a <- ggpie(energy, "Type", "Amount")
energy <- data.frame(t(cc[cc$Ticker == "AAPL", c("Electricity", "Fuel", "Steam", "Heat", "Cooling")]),
stringsAsFactors = F)
energy$Type <- rownames(energy)
rownames(energy) <- NULL
names(energy)[1] <- "Amount"
energy <- energy[!is.na(energy$Amount) & energy$Amount != 0, ]
a <- ggpie(energy, "Type", "Amount")
print(a)
ggpie <- function (dat, by, totals) {
ggplot(dat, aes_string(x=factor(1), y=totals, fill=by)) +
geom_bar(stat='identity', color='black') +
guides(fill=guide_legend(override.aes=list(colour=NA))) + # removes black borders from legend
# coord_polar(theta='y') +
theme(axis.ticks=element_blank(),
axis.text.y=element_blank(),
axis.text.x=element_text(colour='black'),
axis.title=element_blank()) +
scale_y_continuous(breaks=cumsum(dat[[totals]]) - dat[[totals]] / 2, labels=dat[[by]])
}
a <- ggpie(energy, "Type", "Amount")
print(a)
energy
energy <- data.frame(t(cc[cc$Ticker == ticker(), c("Electricity", "Fuel", "Steam", "Heat", "Cooling")]))
energy$Type <- rownames(energy)
rownames(energy) <- NULL
names(energy)[1] <- "Amount"
energy <- energy[!is.na(energy$Amount) & energy$Amount != 0, ]
energy <- data.frame(t(cc[cc$Ticker == "AAPL", c("Electricity", "Fuel", "Steam", "Heat", "Cooling")]))
energy$Type <- rownames(energy)
rownames(energy) <- NULL
names(energy)[1] <- "Amount"
energy <- energy[!is.na(energy$Amount) & energy$Amount != 0, ]
energy <- data.frame(t(cc[cc$Ticker == "AAPL", c("Electricity", "Fuel", "Steam", "Heat", "Cooling")]), stringsAsFactors = T)
energy$Type <- rownames(energy)
rownames(energy) <- NULL
names(energy)[1] <- "Amount"
energy <- energy[!is.na(energy$Amount) & energy$Amount != 0, ]
energy <- data.frame(t(cc[cc$Ticker == "AAPL", c("Electricity", "Fuel", "Steam", "Heat", "Cooling")]),
stringsAsFactors = T)
energy
energy <- data.frame(t(cc[cc$Ticker == ticker(), c("Electricity", "Fuel", "Steam", "Heat", "Cooling")]))
energy$Type <- as.factor(rownames(energy))
rownames(energy) <- NULL
names(energy)[1] <- "Amount"
energy <- energy[!is.na(energy$Amount) & energy$Amount != 0, ]
energy <- data.frame(t(cc[cc$Ticker == "AAPL", c("Electricity", "Fuel", "Steam", "Heat", "Cooling")]))
energy$Type <- as.factor(rownames(energy))
rownames(energy) <- NULL
names(energy)[1] <- "Amount"
energy <- energy[!is.na(energy$Amount) & energy$Amount != 0, ]
energy
levels(energy$Type)
a <- ggpie(energy, "Type", "Amount")
print(a)
runApp('OneDrive/GitHub/gcShiny')
ggplot(energy, aes(x = "", y = Amount, fill = Type)) +
geom_bar(width = 1,stat="identity") +
geom_text(aes(label = percent(as.numeric(energy$Amount / sum(energy$Amount, na.rm = T)))), size=3, position = position_stack(vjust = 0.5))  +
coord_polar(theta = "y")
runApp('OneDrive/GitHub/gcShiny')
runApp('OneDrive/GitHub/gcShiny')
ggpie <- function(df, y, fill) {
label <- percent(as.numeric(df$Amount / sum(df$Amount, na.rm = T)))
ggplot(df, aes(x = "", y = y, fill = fill)) +
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = label), size = 3, position = position_stack(vjust = 0.5))  +
coord_polar(theta = "y") +
blank_theme
}
energy <- data.frame(t(cc[cc$Ticker == "AAPL", c("Electricity", "Fuel", "Steam", "Heat", "Cooling")]))
energy$Type <- as.factor(rownames(energy))
rownames(energy) <- NULL
names(energy)[1] <- "Amount"
energy <- energy[!is.na(energy$Amount) & energy$Amount != 0, ]
ggpie(energy, "Amount", "Type")
ggpie <- function(df, y, fill) {
label <- percent(as.numeric(df$Amount / sum(df$Amount, na.rm = T)))
ggplot(df, aes_string(x = "", y = y, fill = fill)) +
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = label), size = 3, position = position_stack(vjust = 0.5))  +
coord_polar(theta = "y") +
blank_theme
}
ggpie(energy, "Amount", "Type")
ggpie <- function(df, tot, by) {
label <- percent(as.numeric(df$Amount / sum(df$Amount, na.rm = T)))
ggplot(df, aes_string(x = "", y = tot, fill = by)) +
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = label), size = 3, position = position_stack(vjust = 0.5))  +
coord_polar(theta = "y") +
blank_theme
}
ggpie(energy, "Amount", "Type")
ggpie <- function(dat, tot, by) {
label <- percent(as.numeric(dat$Amount / sum(dat$Amount, na.rm = T)))
ggplot(dat, aes_string(x = "", y = tot, fill = by)) +
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = label), size = 3, position = position_stack(vjust = 0.5))  +
coord_polar(theta = "y") +
blank_theme
}
ggpie(energy, "Amount", "Type")
energy
ggplot(energy, aes_string(x = "", y = "Amount", fill = "Type")) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
blank_theme
ggplot(energy, aes(x = "", y = Amount, fill = Type)) +
geom_bar(width = 1,stat="identity") +
geom_text(aes(label = percent(as.numeric(energy$Amount / sum(energy$Amount, na.rm = T)))), size=3, position = position_stack(vjust = 0.5))  +
coord_polar(theta = "y")
ggplot(energy, aes(x = "", y = Amount, fill = Type)) +
geom_bar(width = 1,stat="identity") +
geom_text(aes(label = percent(as.numeric(energy$Amount / sum(energy$Amount, na.rm = T)))), size=3, position = position_stack(vjust = 0.5))  +
coord_polar(theta = "y") + blank_theme
ggplot(energy, aes(x = "", y = Amount, fill = Type)) +
geom_bar(width = 1,stat="identity") +
geom_text(aes(label = percent(as.numeric(energy$Amount / sum(energy$Amount, na.rm = T)))), size=3, position = position_stack(vjust = 0.5))  +
coord_polar(theta = "y") + blank_theme + labs(fill = "")
blank_theme <- theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(size = 14, face = "bold")
)
ggplot(energy, aes(x = "", y = Amount, fill = Type)) +
geom_bar(width = 1,stat="identity") +
geom_text(aes(label = percent(as.numeric(energy$Amount / sum(energy$Amount, na.rm = T)))), size=3, position = position_stack(vjust = 0.5))  +
coord_polar(theta = "y") + blank_theme + labs(fill = "")
blank_theme <- theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(size = 14, face = "bold")
)
ggplot(energy, aes(x = "", y = Amount, fill = Type)) +
geom_bar(width = 1,stat="identity") +
geom_text(aes(label = percent(as.numeric(energy$Amount / sum(energy$Amount, na.rm = T)))), size=3, position = position_stack(vjust = 0.5))  +
coord_polar(theta = "y") + blank_theme + labs(fill = "")
ggplot(energy, aes(x = "", y = Amount, fill = Type)) +
geom_bar(width = 1,stat="identity") +
geom_text(aes(label = percent(as.numeric(energy$Amount / sum(energy$Amount, na.rm = T)))), size=3, position = position_stack(vjust = 0.5))  +
coord_polar(theta = "y") + blank_theme
runApp('OneDrive/GitHub/gcShiny')
runApp('OneDrive/GitHub/gcShiny')
runApp('OneDrive/GitHub/gcShiny')
energy <- data.frame(t(cc[cc$Ticker == "MMM", c("Electricity", "Fuel", "Steam", "Heat", "Cooling")]))
energy$Type <- as.factor(rownames(energy))
rownames(energy) <- NULL
names(energy)[1] <- "Amount"
energy <- energy[!is.na(energy$Amount) & energy$Amount != 0, ]
energy
energy <- arrange(energy, Amount)
energy
energy <- arrange(energy, desc(Amount))
runApp('OneDrive/GitHub/gcShiny')
levels(energy$Type)
runApp('OneDrive/GitHub/gcShiny')
energy <- data.frame(t(cc[cc$Ticker == "MMM", c("Electricity", "Fuel", "Steam", "Heat", "Cooling")]))
energy$Type <- rownames(energy)
energy$Type <- factor(energy$Type, levels = energy$Type[order(energy$Amount)])
rownames(energy) <- NULL
names(energy)[1] <- "Amount"
energy <- energy[!is.na(energy$Amount) & energy$Amount != 0, ]
energy
order(energy$Amount)
energy$Type
energy$Type[c(3, 1, 2, 4)]
energy$Type[order(energy$Amount)
]
runApp('OneDrive/GitHub/gcShiny')
source('~/OneDrive/R/NBA/Scripts/actual.R')
View(actual)
View(pool)
shiny::runApp('OneDrive/GitHub/gcShiny')
# pie chart function
ggpie <- function(data, y, fill) {
label <- percent(as.numeric(data[, y] / sum(data[, y], na.rm = T)))
ggplot(data) + aes(x = "") + aes_string(y = y(), fill = fill, order = fill) +
geom_bar(width = 1, stat = "identity") +
geom_text(aes(label = label), size = 5, position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
blank_theme +
theme(legend.text = element_text(size = 15))
}
runApp('OneDrive/GitHub/gcShiny')
runApp('OneDrive/GitHub/gcShiny')
runApp('OneDrive/GitHub/gcShiny')
names(w)
names(w)[10:17]
runApp('OneDrive/GitHub/gcShiny')
companies$CDP.Name[companies$Ticker == "MT"]
f[f$Ticker == "MT"]
runApp('OneDrive/GitHub/gcShiny')
install.packages("shinythemes")
runApp('OneDrive/GitHub/gcShiny')
runApp('OneDrive/GitHub/gcShiny')
runApp('OneDrive/GitHub/gcShiny')
runApp('OneDrive/GitHub/gcShiny')
runApp('OneDrive/GitHub/gcShiny')
runApp('OneDrive/GitHub/gcShiny')
runApp('OneDrive/GitHub/gcShiny')
runApp('OneDrive/GitHub/gcShiny')
runApp('OneDrive/GitHub/gcShiny')
runApp('OneDrive/GitHub/gcShiny')
runApp('OneDrive/GitHub/gcShiny')
anyDuplicated(companies$CDP.Name)
runApp('OneDrive/GitHub/gcShiny')
runApp('OneDrive/GitHub/gcShiny')
runApp('Dropbox/DFS/NBA')
runApp('Dropbox/DFS/NBA')
shiny::runApp('Dropbox/DFS/NBA')
runApp('Dropbox/DFS/NBA')
shiny::runApp('Dropbox/DFS/NBA')
runApp('Dropbox/DFS/NBA')
runApp('Dropbox/DFS/NBA')
runApp('Dropbox/DFS/NBA')
source('~/OneDrive/R/NBA/Scripts/actual.R')
shiny::runApp('Dropbox/DFS/NBA')
runApp('Dropbox/DFS/NBA')
as.character(Sys.Date())
runApp('Dropbox/DFS/NBA')
getwd()
a <- file.info("~/Dropbox/DFS/NBA/FD/projections.csv")
a
a$mtime
a <- file.info("~/Dropbox/DFS/NBA/FD/results.csv")
a$mtime
a <- file.info("~/Dropbox/DFS/NBA/FD/results.csv")$mtime
runApp('Dropbox/DFS/NBA')
source('~/OneDrive/R/NBA/Scripts/actual.R')
shiny::runApp('Dropbox/DFS/NBA')
runApp('Dropbox/DFS/NBA')
library(shiny)
runApp('Dropbox/DFS/NBA')
runApp('Dropbox/DFS/NBA')
source('~/OneDrive/R/NBA/Scripts/actual.R')
source('~/OneDrive/R/NBA/Scripts/actual.R')
source('~/OneDrive/GitHub/DFS/NBA/Scripts/driver.R')
source('~/OneDrive/GitHub/DFS/NBA/Scripts/driver.R')
source('~/OneDrive/GitHub/DFS/NBA/Scripts/driver.R')
runApp('~/Dropbox/DFS/NBA')
runApp()
runApp()
